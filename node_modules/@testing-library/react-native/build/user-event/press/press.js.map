{"version":3,"file":"press.js","names":["_eventBuilder","require","_utils","_act","_interopRequireDefault","_componentTree","_filterNodeByType","_pointerEvents","_hostComponentNames","_timers","_constants","_warnAboutRealTimers","obj","__esModule","default","press","element","basePress","config","longPress","options","duration","isEnabledHostText","isEnabledTextInput","triggerMockPressEvent","isEnabledTouchResponder","triggerPressEvent","hostParentElement","getHostParent","areFakeTimersEnabled","jestFakeTimersAreEnabled","warnAboutRealTimers","wait","act","props","onResponderGrant","EventBuilder","Common","touch","dispatchConfig","registrationName","onResponderRelease","DEFAULT_MIN_PRESS_DURATION","isPointerEventEnabled","onStartShouldSetResponder","filterNodeByType","getHostComponentNames","text","disabled","onPress","textInput","editable","onPressIn","onPressOut"],"sources":["../../../src/user-event/press/press.ts"],"sourcesContent":["import { ReactTestInstance } from 'react-test-renderer';\nimport { EventBuilder } from '../event-builder';\nimport { UserEventInstance } from '../setup';\nimport { wait } from '../utils';\nimport act from '../../act';\nimport { getHostParent } from '../../helpers/component-tree';\nimport { filterNodeByType } from '../../helpers/filterNodeByType';\nimport { isPointerEventEnabled } from '../../helpers/pointer-events';\nimport { getHostComponentNames } from '../../helpers/host-component-names';\nimport { jestFakeTimersAreEnabled } from '../../helpers/timers';\nimport { DEFAULT_MIN_PRESS_DURATION } from './constants';\nimport { warnAboutRealTimers } from './utils/warnAboutRealTimers';\n\nexport type PressOptions = {\n  duration: number;\n};\n\nexport async function press(\n  this: UserEventInstance,\n  element: ReactTestInstance\n): Promise<void> {\n  await basePress(this.config, element);\n}\n\nexport async function longPress(\n  this: UserEventInstance,\n  element: ReactTestInstance,\n  options: PressOptions = { duration: 500 }\n): Promise<void> {\n  await basePress(this.config, element, options);\n}\n\nconst basePress = async (\n  config: UserEventInstance['config'],\n  element: ReactTestInstance,\n  options: PressOptions = { duration: 0 }\n): Promise<void> => {\n  // Text and TextInput components are mocked in React Native preset so the mock\n  // doesn't implement the pressability class\n  // Thus we need to call the props directly on the host component\n  if (isEnabledHostText(element) || isEnabledTextInput(element)) {\n    await triggerMockPressEvent(config, element, options);\n    return;\n  }\n\n  if (isEnabledTouchResponder(element)) {\n    await triggerPressEvent(config, element, options);\n    return;\n  }\n\n  const hostParentElement = getHostParent(element);\n  if (!hostParentElement) {\n    return;\n  }\n\n  await basePress(config, hostParentElement, options);\n};\n\nconst triggerPressEvent = async (\n  config: UserEventInstance['config'],\n  element: ReactTestInstance,\n  options: PressOptions = { duration: 0 }\n) => {\n  const areFakeTimersEnabled = jestFakeTimersAreEnabled();\n  if (!areFakeTimersEnabled) {\n    warnAboutRealTimers();\n  }\n\n  await wait(config);\n\n  await act(async () => {\n    element.props.onResponderGrant({\n      ...EventBuilder.Common.touch(),\n      dispatchConfig: { registrationName: 'onResponderGrant' },\n    });\n\n    await wait(config, options.duration);\n\n    element.props.onResponderRelease({\n      ...EventBuilder.Common.touch(),\n      dispatchConfig: { registrationName: 'onResponderRelease' },\n    });\n\n    if (DEFAULT_MIN_PRESS_DURATION - options.duration > 0) {\n      await wait(config, DEFAULT_MIN_PRESS_DURATION - options.duration);\n    }\n  });\n};\n\nconst isEnabledTouchResponder = (element: ReactTestInstance) => {\n  return (\n    isPointerEventEnabled(element) &&\n    element.props.onStartShouldSetResponder?.()\n  );\n};\n\nconst isEnabledHostText = (element: ReactTestInstance) => {\n  return (\n    filterNodeByType(element, getHostComponentNames().text) &&\n    isPointerEventEnabled(element) &&\n    !element.props.disabled &&\n    element.props.onPress\n  );\n};\n\nconst isEnabledTextInput = (element: ReactTestInstance) => {\n  return (\n    filterNodeByType(element, getHostComponentNames().textInput) &&\n    isPointerEventEnabled(element) &&\n    element.props.editable !== false\n  );\n};\n\nconst triggerMockPressEvent = async (\n  config: UserEventInstance['config'],\n  element: ReactTestInstance,\n  options: PressOptions = { duration: 0 }\n) => {\n  const { onPressIn, onPress, onPressOut } = element.props;\n  await wait(config);\n  if (onPressIn) {\n    onPressIn(EventBuilder.Common.touch());\n  }\n  if (onPress) {\n    onPress(EventBuilder.Common.touch());\n  }\n  await wait(config, options.duration);\n  if (onPressOut) {\n    if (DEFAULT_MIN_PRESS_DURATION - options.duration > 0) {\n      await wait(config, DEFAULT_MIN_PRESS_DURATION - options.duration);\n    }\n    onPressOut(EventBuilder.Common.touch());\n  }\n};\n"],"mappings":"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"}