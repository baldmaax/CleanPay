"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dispatchHostEvent = dispatchHostEvent;
var _act = _interopRequireDefault(require("../../act"));
var _fireEvent = require("../../fireEvent");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/**
 * Dispatch event function used by User Event module.
 *
 * @param element element trigger event on
 * @param eventName name of the event
 * @param event event payload
 */
function dispatchHostEvent(element, eventName, event) {
  const handler = getEnabledEventHandler(element, eventName);
  if (!handler) {
    return;
  }
  (0, _act.default)(() => {
    handler(event);
  });
}
function getEnabledEventHandler(element, eventName) {
  const touchResponder = (0, _fireEvent.isTouchResponder)(element) ? element : undefined;
  const handler = getEventHandler(element, eventName);
  if (handler && (0, _fireEvent.isEventEnabled)(element, eventName, touchResponder)) {
    return handler;
  }
  return null;
}
function getEventHandler(element, eventName) {
  const eventHandlerName = getEventHandlerName(eventName);
  if (typeof element.props[eventHandlerName] === 'function') {
    return element.props[eventHandlerName];
  }
  return undefined;
}
function getEventHandlerName(eventName) {
  return `on${eventName.charAt(0).toUpperCase()}${eventName.slice(1)}`;
}
//# sourceMappingURL=events.js.map