import { ReactTestInstance } from 'react-test-renderer';
import { PressOptions } from '../press/press';
export interface UserEventSetupOptions {
    /**
     * Between some subsequent inputs like typing a series of characters
     * the code execution is delayed per `setTimeout` for (at least) `delay` seconds.
     * This moves the next changes at least to next macro task
     * and allows other (asynchronous) code to run between events.
     *
     * `null` prevents `setTimeout` from being called.
     *
     * @default 0
     */
    delay?: number;
    /**
     * Function to be called to advance fake timers. Setting it is necessary for
     * fake timers to work.
     *
     * @example jest.advanceTimersByTime
     */
    advanceTimers?: (delay: number) => Promise<void> | void;
}
/**
 * Creates a new instance of user event instance with the given options.
 *
 * @param options
 * @returns
 */
export declare function setup(options?: UserEventSetupOptions): UserEventInstance;
export interface UserEventConfig {
    delay: number;
    advanceTimers: (delay: number) => Promise<void> | void;
}
export interface UserEventInstance {
    config: UserEventConfig;
    press: (element: ReactTestInstance) => Promise<void>;
    longPress: (element: ReactTestInstance, options?: PressOptions) => Promise<void>;
    type: (element: ReactTestInstance, text: string) => Promise<void>;
}
